#!/usr/bin/bpftrace
/* Trace time spent by a process (PID) in futex() grouped by mutex (UADDR) and thread (TID)
 * with the goal of identifying lock contention.
 *
 * based on systemtap example
 * https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/6/html/systemtap_beginners_guide/futexcontentionsect
 */

BEGIN {
    @targetpid = $1;
    printf("Tracing PID %d\n", @targetpid);
}

/* FUTEX_CMD_MASK==0x7f, FUTEX_WAIT==0 */
tracepoint:syscalls:sys_enter_futex /pid==@targetpid && (args->op&0x7f)==0/
{
    @uaddr[tid] = args->uaddr;
    @tstart[tid] = nsecs;
}

tracepoint:syscalls:sys_exit_futex /@uaddr[tid]/
{
    @result[tid, @uaddr[tid]] = stats(nsecs - @tstart[tid]);

    delete(@uaddr[tid]);
    delete(@tstart[tid]);
}

END {
    printf("Done.\n");
    clear(@targetpid);
    clear(@uaddr);
    clear(@tstart);
}
